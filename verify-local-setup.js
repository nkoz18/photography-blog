#!/usr/bin/env node

const axios = require('axios');

async function verifySetup() {
  console.log('üîç Verifying local development setup...\n');
  
  try {
    // Test 1: Backend API
    console.log('1Ô∏è‚É£ Testing backend API...');
    const backendResponse = await axios.get('http://localhost:1337/api/articles?populate=image');
    const articles = backendResponse.data.data;
    console.log(`   ‚úÖ Backend API working - Found ${articles.length} articles`);
    
    // Test 2: Image URLs in articles
    console.log('\n2Ô∏è‚É£ Checking image URLs in articles...');
    let imagesFound = 0;
    for (const article of articles) {
      if (article.attributes.image?.data?.attributes?.url) {
        const imageUrl = article.attributes.image.data.attributes.url;
        console.log(`   üìÑ ${article.attributes.title}`);
        console.log(`      üñºÔ∏è  Image: ${imageUrl}`);
        if (imageUrl.includes('localhost:1337/api/image-proxy/')) {
          console.log(`      ‚úÖ Using local proxy`);
          imagesFound++;
        } else {
          console.log(`      ‚ö†Ô∏è  Not using local proxy`);
        }
      }
    }
    console.log(`   üìä ${imagesFound}/${articles.length} articles have proxy images`);
    
    // Test 3: Image proxy endpoint
    console.log('\n3Ô∏è‚É£ Testing image proxy...');
    if (imagesFound > 0) {
      const testArticle = articles.find(a => a.attributes.image?.data?.attributes?.url?.includes('localhost:1337/api/image-proxy/'));
      if (testArticle) {
        const imageUrl = testArticle.attributes.image.data.attributes.url;
        const proxyResponse = await axios.head(imageUrl);
        console.log(`   ‚úÖ Image proxy working - Status: ${proxyResponse.status}`);
      }
    } else {
      console.log(`   ‚ö†Ô∏è  No proxy images to test`);
    }
    
    // Test 4: Frontend
    console.log('\n4Ô∏è‚É£ Testing frontend...');
    try {
      const frontendResponse = await axios.get('http://localhost:3000', { timeout: 3000 });
      console.log(`   ‚úÖ Frontend accessible - Status: ${frontendResponse.status}`);
    } catch (error) {
      console.log(`   ‚ö†Ô∏è  Frontend not accessible: ${error.message}`);
    }
    
    console.log('\nüéâ Local development setup verification complete!');
    console.log('\nüìã Summary:');
    console.log(`   ‚Ä¢ Backend: http://localhost:1337 ${backendResponse.status === 200 ? '‚úÖ' : '‚ùå'}`);
    console.log(`   ‚Ä¢ Frontend: http://localhost:3000 (check manually)`);
    console.log(`   ‚Ä¢ Images: ${imagesFound} articles with proxy images`);
    console.log(`   ‚Ä¢ Image Proxy: http://localhost:1337/api/image-proxy/[filename]`);
    
  } catch (error) {
    console.error('‚ùå Verification failed:', error.message);
  }
}

verifySetup();